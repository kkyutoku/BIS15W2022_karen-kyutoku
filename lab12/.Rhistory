population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long$popuation <- as.numeric(population_long$popuation)
population_long
population_long$popuation <- as.integer(population_long$popuation)
population_long
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long$popuation <- as.numeric(population_long$popuation)
population_long$year <- as.factor(population_long$year)
population_long
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long$year <- as.numeric(population_long$year)
population_long
dplyr::select()
population_long%>%
group_by(country) %>%
filter(year=="1920"|year=="2020") %>%
summarize(min=min(popuation),
mean=mean(popuation),
max=max(popuation))
population_long%>%
group_by(country) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = life_expectancy) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long%>%
group_by(country) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long$year <- as.character(population_long$year)
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
life_exp_long
population_long
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
View(gdppercapita_long)
gdppercapita_long%>%
select(country, year, gdppercapita) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = gdppercapita) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
gdppercapita_long %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
select(year, country, gdppercapita) %>%
ggplot(aes(x=year, y=gdppercapita, group=country, color=country))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "GDP growth in 1920-2020",
x = "year",
y= "GDP",
fill= "country")
gapminder_join <- inner_join(life_expectancy_100, population_100, by= c("country", "year"))
life_expectancy_100 <- life_exp_long %>%
select(country, year, life_expectancy) %>%
filter(year>=1920 & year<=2020)
life_expectancy_100
population_100
population_100 <- population_long %>%
select(country, year, population) %>%
filter(year>=1920 & year<=2020)
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
mutate(year=as.factor(year)) %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long$year <- as.numeric(population_long$year)
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
View(population_long)
View(population)
population_long <- population %>%
pivot_longer(-country,
names_to = "year",
values_to = "popuation")
population_long
View(population_long)
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
income_100
income_100 <- gdppercapita_long %>%
select(country, year, gdppercapita) %>%
filter(year>=1920 & year<=2020)
income_100
population_long$year <- as.character(population_long$year)
population_long
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
population_long%>%
dplyr::select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
install.packages(c("cli", "clipr", "colorspace", "evaluate", "jsonlite", "tidyselect", "yaml"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
population <- read_csv(here("midterm2", "data", "population_total.csv"))
gdppercapita <- read_csv(here("midterm2", "data", "income_per_person_gdppercapita_ppp_inflation_adjusted.csv"))
life_exp <- read_csv(here("midterm2", "data", "life_expectancy_years.csv"))
population
glimpse(population)
population_long <- population %>%
pivot_longer(-country,
names_to = "year",
values_to = "popuation")
population_long
gdppercapita
gdppercapita_long <- gdppercapita %>%
pivot_longer(-country,
names_to = "year",
values_to = "gdppercapita")
gdppercapita_long
life_exp
life_exp_long <- life_exp %>%
pivot_longer(-country,
names_to = "year",
values_to = "life_expectancy")
life_exp_long
population %>%
count(country)
gdppercapita %>%
count(country)
life_exp %>%
count(country)
life_exp_long %>%
filter(year>=1920 & year<=2020) %>%
group_by(country) %>%
summarize(mean_life_exp=mean(life_expectancy, na.rm=T)) %>%
arrange(desc(mean_life_exp))
life_exp_long %>%
select(country, year, life_expectancy) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = life_expectancy) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
life_exp_long %>%
filter(country=="Kuwait"|country=="Kyrgyz Republic"|country=="Turkmenistan"|country=="South Korea"|country=="Tajikistan") %>%
select(year, country, life_expectancy) %>%
ggplot(aes(x=as.numeric(year), y=life_expectancy, group=country, color=country))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Improvement in Life Expectancy 1920-2020",
x = "year",
y= "life expectancy",
fill= "country")
population_long$year <- as.numeric(population_long$year)
population_long
population_long%>%
select(country, year, population) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = population) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
gdppercapita_long%>%
select(country, year, gdppercapita) %>%
filter(year=="1920"|year=="2020") %>%
pivot_wider(names_from= year,
names_prefix = "yr_",
values_from = gdppercapita) %>%
mutate(delta=yr_2020-yr_1920) %>%
arrange(desc(delta))
gdppercapita_long %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
select(year, country, gdppercapita) %>%
ggplot(aes(x=as.numeric(year), y=gdppercapita, group=country, color=country))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "GDP growth in 1920-2020",
x = "year",
y= "GDP",
fill= "country")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list[[2]])
str(spider_list[[1]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names <- list.files(path = "data/spiders", pattern = ".csv")
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
names(spider_list[["Butte"]])
spider_list$Napa
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
table_A
table_B
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
summary(spiders_with_locs)
names(spiders_with_locs)
class(spiders_with_locs$Date)
day <- today()
str(day)
day <- today()
day
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y") #not lubridate
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("remotes")
#remotes::install_github("hrbrmstr/albersusa")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map1 <- get_map(bbox, maptype = "toner-hybrid", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "terrain-lines", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map1)
library(albersusa)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
install.packages("remotes")
#remotes::install_github("hrbrmstr/albersusa")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
library(albersusa)
install.packages("remotes")
#remotes::install_github("hrbrmstr/albersusa")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
#install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), size=0.8)+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
uso_map
cnty_comp <- counties_sf() # get a composite map of USA counties
ca_comp <- us_comp %>%
filter(name=="California")
